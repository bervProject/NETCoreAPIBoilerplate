name: Build&Dockerize
on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches: [ main ]
env:
  IMAGE_NAME: netcoreboilerplate
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-restore --no-build --verbosity normal --collect:"XPlat Code Coverage"
    - name: Report Codecov
      uses: codecov/codecov-action@v2
  build-docker-test:
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Build Image
        run: docker build . -t $IMAGE_NAME
  build-push-docker:
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          bervproject/${{ env.IMAGE_NAME }}
          ghcr.io/${{ github.repository }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
